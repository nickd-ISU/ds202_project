clean%>%ggplot(aes(x=`Category Name`,count=`Volume Sold (Liters)`))+geom_histogram(stat = "count",)+coord_flip()+theme(axis.text.y = element_text(size = 6))+ylab("Volume Sold (Liters)")
clean%>%ggplot(aes(x=`Category Name`,count=`Volume Sold (Liters)`))+geom_histogram(stat = "count",)+coord_flip()+theme(axis.text.y = element_text(size = 6))+ylab("Volume Sold (Liters)")+ggtitle("Volume Sold in Category Name")
clean%>%ggplot(aes(x=`Category Name`,count=`Volume Sold (Liters)`))+geom_histogram(stat = "count",)+coord_flip()+theme(axis.text.y = element_text(size = 5.5))+ylab("Volume Sold (Liters)")+ggtitle("Volume Sold in Category Name")
clean%>%ggplot(aes(x=`Category Name`,count=`Volume Sold (Liters)`))+geom_histogram(stat = "count",)+coord_flip()+theme(axis.text.y = element_text(size = 5))+ylab("Volume Sold (Liters)")+ggtitle("Volume Sold in Category Name")
clean%>%ggplot(aes(x=`Category Name`,count=`Volume Sold (Liters)`))+geom_histogram(stat = "count",)+coord_flip()+theme(axis.text.y = element_text(size = 6))+ylab("Volume Sold (Liters)")+ggtitle("Volume Sold in Category Name")
clean%>%ggplot(aes(x=`Category Name`,count=`Volume Sold (Liters)`))+geom_histogram(stat = "count",binwidth = 10)+coord_flip()+theme(axis.text.y = element_text(size = 6))+ylab("Volume Sold (Liters)")+ggtitle("Volume Sold in Category Name")
clean%>%ggplot(aes(x=`Category Name`,count=`Volume Sold (Liters)`))+geom_histogram(stat = "count",binwidth = 0.7)+coord_flip()+theme(axis.text.y = element_text(size = 6))+ylab("Volume Sold (Liters)")+ggtitle("Volume Sold in Category Name")
clean%>%ggplot(aes(x=`Category Name`,count=`Volume Sold (Liters)`))+geom_histogram(stat = "count",binwidth = 0.3)+coord_flip()+theme(axis.text.y = element_text(size = 6))+ylab("Volume Sold (Liters)")+ggtitle("Volume Sold in Category Name")
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarise(sales=sum())
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarise(sales=n())
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarise(sales=n())
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarise(sales=sum(`Bottles Sold`)
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarise(sales=sum(`Bottles Sold`))
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarise(sales=sum(`Bottles Sold`))
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarise(sales=(sum(`Bottles Sold`)))
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sales=(sum(`Bottles Sold`)))
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)
temp
temp%<%filter(Moth==1&&Day==9)
temp%>%filter(Moth==1&&Day==9)
temp%>%filter(Month==1&&Day==9)
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sales=(sum(`Bottles Sold`)))
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sales=sum(`Bottles Sold`))
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sales=(sum(`Bottles Sold`)))
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sales=sum(`Bottles Sold`))
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sales=sum(`Bottles Sold`),volume_liters=sum(`Volume Sold (Liters)`),money_spent=sum(`Sale (Dollars)`))
temp
temp%>%ggplot(aes(x=Day,y=money_spent))+geom_point()
temp%>%ggplot(aes(x=Day,y=money_spent,color=Month))+geom_point()
temp%>%ggplot(aes(x=Day,y=money_spent))+geom_point()+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=money_spent,color=Month))+geom_point()+facet_wrap(~Month)
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sales=sum(`Bottles Sold`),volume_liters=sum(`Volume Sold (Liters)`),Salest=sum(`Sale (Dollars)`))
temp%>%ggplot(aes(x=Day,y=money_spent,color=Month))+geom_point()+facet_wrap(~Month)
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sales=sum(`Bottles Sold`),volume_liters=sum(`Volume Sold (Liters)`),Sales=sum(`Sale (Dollars)`))
temp%>%ggplot(aes(x=Day,y=Sales,color=Month))+geom_point()+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=Sales,color=Month))+geom_point()+facet_wrap(~Month)+ylab("Sales (Dollars)")
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(sold=sum(`Bottles Sold`),volume_liters=sum(`Volume Sold (Liters)`),Sales=sum(`Sale (Dollars)`))
temp%>%ggplot(aes(x=Day,y=Sales,color=Month))+geom_point()+facet_wrap(~Month)+ylab("Sales (Dollars)")
temp
temp<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%summarize(bottles_sold=sum(`Bottles Sold`),volume_liters=sum(`Volume Sold (Liters)`),Sales=sum(`Sale (Dollars)`))
temp%>%ggplot(aes(x=Day,y=Sales,color=Month))+geom_point()+facet_wrap(~Month)+ylab("Sales (Dollars)")
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loes")+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess")+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month,scales = 0)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month,scales = "free_x")
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month)+ylim(0,20000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month)+ylim(0,10000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month)+ylim(0,17000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month)+ylim(0,19000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth()+facet_wrap(~Month)+ylim(0,20000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess", span=1/10)+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess", span=1/3)+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess", span=1/3)+facet_wrap(~Month)+ylim(0)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess", span=1/3)+facet_wrap(~Month)+ylim(0,30000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess", span=1/10)+facet_wrap(~Month)+ylim(0,30000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess")+facet_wrap(~Month)+ylim(0,30000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess")+facet_wrap(~Month)+ylim(0,20000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess")+facet_wrap(~Month)+ylim(0,15000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess",span=1/10)+facet_wrap(~Month)+ylim(0,15000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess",span=1)+facet_wrap(~Month)+ylim(0,15000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess",span=1/2)+facet_wrap(~Month)+ylim(0,15000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess",span=1/3)+facet_wrap(~Month)+ylim(0,15000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point()+geom_smooth(method="loess",span=1/2)+facet_wrap(~Month)+ylim(0,15000)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point(position = 'jitter')+geom_smooth()+facet_wrap(~Month)
clean%>%ggplot(aes(x=Day,y=`Volume Sold (Liters)`))+geom_point(position = 'jitter')+geom_smooth()+facet_wrap(~Month)
temp%>%ggplot(aes(x=Day,y=volume_liters))+geom_point(position = 'jitter')+geom_smooth()+facet_wrap(~Month)+ylim(0,15000)
temp
clean%>%filer(Month==1&&Day==3)
clean%>%filter(Month==1&&Day==3)
clean%>%filter(Year==2019)%>%group_by(Month,Day)
clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%filter(Month==1)
clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%filter(Month==1&&Day==9)
clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%filter(Month==1&&Day==9)%>%summarise(n=sum('Volume Sold (Liters)'))
clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%filter(Month==1&&Day==9)%>%summarise(n=sum(`Volume Sold (Liters)`))
sum(test$`Volume Sold (Liters)`)
test<-clean%>%filter(Year==2019)%>%group_by(Month,Day)%>%filter(Month==1&&Day==9)
sum(test$`Volume Sold (Liters)`)
test$`Volume Sold (Liters)`
sum(test$`Volume Sold (Liters)`[1:12])
test$`Volume Sold (Liters)`
summary(clean$`Sale (Dollars)`)
summary(clean$`Bottles Sold`)
summary(clean$`Volume Sold (Liters)`)
knitr::opts_chunk$set(echo = TRUE)
acc <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/accident.csv", stringsAsFactors = FALSE)
acc
person <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/person.csv", stringsAsFactors = FALSE)
person <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/person.csv", stringsAsFactors = FALSE)
```
person <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/person.csv", stringsAsFactors = FALSE)
person
str(acc)
str(person)
str(acc)
#part 1
#1
acc$DAY_WEEK<-factor(acc$DAY_WEEK,levels = c("Mon","Tues","Wed","Thrus","Fri","Sat","Sun"))
acc
str(acc)
library(ggplot2)
library(dplyr)
acc <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/accident.csv", stringsAsFactors = FALSE)
str(acc)
person <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/person.csv", stringsAsFactors = FALSE)
#part 1
#1
acc %>%ggplot(aes(x=DAY_WEEK))+geom_histogram()
acc %>%ggplot(aes(x=DAY_WEEK))+geom_histogram()+xlab("Day of Week")+ylab("number of accidents")
#2
acc%>%ggplot(aes(x=HOUR))+geom_histogram()
#2
acc%>%ggplot(aes(x=HOUR))+geom_histogram()+xlim(0,25)
#2
length(acc%>%filter(HOUR>25))
#2
acc%>%filter(HOUR>25)
#2
acc%>%ggplot(aes(x=HOUR))+geom_histogram()+xlim(0,25)
#2
acc%>%ggplot(aes(x=HOUR))+geom_histogram()+xlim(0,24)
temp<-acc%>%filter(DRUNK_DR>=1)
length(temp)
person_sub<-person%>%filter(PER_TYP==1)
person_sub
knitr::opts_chunk$set(echo = TRUE)
best<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show')
best
best<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show')
full<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show full sheet')
#extract dog breed, category, datadog score, popularity, intelligence
data<-full%>%select(1,3,5,6,11,32)
library(dplyr)
#extract dog breed, category, datadog score, popularity, intelligence
data<-full%>%select(1,3,5,6,11,32)
data
data<-data[-(1:3),]
data
names(data)<-c("dog breed","category","score","popularity","intelligence","size")
data
str(data)
data$category<-as.factor(data$category)
str(data)
data$size<-as.factor(data$size)
str(data)
data<- data%>%mutate(score= as.numeric(score), popularity = as.numeric(popularity),intelligence = as.numeric(intelligence))
str(data)
install.packages("ggrepel")
str(data)
data <- data %>% mutate(intelligence = ifelse(intelligence>50,"clever","dumb"))
str(data)
library(dplyr)
best<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show')
full<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show full sheet')
#extract dog breed, category, datadog score, popularity, intelligence, size
data<-full%>%select(1,3,5,6,11,32)
data<-data[-(1:3),]
names(data)<-c("dog breed","category","score","popularity","intelligence","size")
str(data)
na.omit(data)
str(data)
data$category<-as.factor(data$category)
data$size<-as.factor(data$size)
data<- data%>%mutate(score= as.numeric(score), popularity = as.numeric(popularity),intelligence = as.numeric(intelligence))
data <- data %>% mutate(intelligence = ifelse(intelligence>50,"clever","dumb"))
str(data)
data%>%ggplot(aes(x=score,y=popularity,color=`dog breed`))+geom_point()
library(ggplot2)
data%>%ggplot(aes(x=score,y=popularity,color=`dog breed`))+geom_point()
data%>%ggplot(aes(x=score,y=popularity))+geom_point()
data%>%ggplot(aes(x=score,y=popularity))+geom_point()+scale_y_reverse()
plot<-data%>%ggplot(aes(x=score,y=popularity))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,label=`dog breed`))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,labels(`dog breed`)))+geom_point()+scale_y_reverse()
plot
library(tidyverse)
plot<-data%>%ggplot(aes(x=score,y=popularity))+geom_point()+scale_y_reverse()+geom_text(aes(label=))
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label=`dog breed`))+geom_point()+scale_y_reverse()
plot
library(ggplot2)
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`,size=1),hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`,size=0.3),hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`,label.size=0.3),hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`,label.size=0.01),hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`,label.size=1),hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=1,hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=10,hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=3,hjust=0, vjust=0)+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2,hjust=0, vjust=0)+scale_y_reverse()
plot
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,hjust=0, vjust=0)+scale_y_reverse()
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label=`dog breed`,size=size))+geom_point()+scale_y_reverse()
plot
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,hjust=0, vjust=0)+scale_y_reverse()
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label=`dog breed`))+geom_point()+scale_y_reverse()
plot
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,hjust=0, vjust=0)+scale_y_reverse()
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1)+scale_y_reverse()
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1)+scale_y_reverse()
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1)+scale_y_reverse() +theme(plot.margin = margin(5,5,5,5,"cm"))
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
ggsave(g, height = 7 , width = 7 * aspect_ratio)
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1)+scale_y_reverse()
ggsave(plot = plot,width = 100,height = 100)
ggsave(plot,width = 100,height = 100)
window(10,6)
windows(10,6)
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,vjust = 0, nudge_y = 0.5)+scale_y_reverse()
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,vjust = 0, nudge_y = 0.7)+scale_y_reverse()
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,vjust = 0, nudge_y = 1)+scale_y_reverse()
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
knitr::opts_chunk$set(echo = TRUE,fig.width = 8,fig.height = 8)
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,vjust = 0, nudge_y = 1)+scale_y_reverse()
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,shape=intelligence))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,vjust = 0, nudge_y = 1.2)+scale_y_reverse()
#plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,label='dog breed'))+geom_point()+scale_y_reverse()
plot
score_max=max(data$score)
score_max
knitr::opts_chunk$set(echo = TRUE,fig.width = 8,fig.height = 8)
library(dplyr)
library(tidyverse)
library(ggplot2)
best<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show')
full<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show full sheet')
#extract dog breed, category, datadog score, popularity, intelligence, size
data<-full%>%select(1,3,5,6,11,32)
data<-data[-(1:3),]
names(data)<-c("dog breed","category","score","popularity","intelligence","size")
data<-na.omit(data)
str(data)
data$category<-as.factor(data$category)
data$size<-as.factor(data$size)
data<- data%>%mutate(score= as.numeric(score), popularity = as.numeric(popularity),intelligence = as.numeric(intelligence))
data <- data %>% mutate(intelligence = ifelse(intelligence>50,"clever","dumb"))
score_max=max(data$score)
score_max
popularity_mid=max(data$popularity)/2
popularity_mid
plot<-data%>%ggplot(aes(x=score,y=popularity,color=category,shape=intelligence,size=size))+geom_point()+geom_text(aes(label=`dog breed`),size=2.1,vjust = 0, nudge_y = 1.6)+scale_y_reverse()
knitr::opts_chunk$set(echo = TRUE,fig.width = 8,fig.height = 8)
library(dplyr)
library(tidyverse)
library(ggplot2)
best<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show')
full<-readxl::read_xlsx("KIB - Best in Show (public).xlsx",sheet='Best in show full sheet')
#extract dog breed, category, datadog score, popularity, intelligence, size
data<-full%>%select(1,3,5,6,11,32)
data<-data[-(1:3),]
names(data)<-c("dog breed","category","score","popularity","intelligence","size")
data<-na.omit(data)
str(data)
data$category<-as.factor(data$category)
data$size<-as.factor(data$size)
data<- data%>%mutate(score= as.numeric(score), popularity = as.numeric(popularity),intelligence = as.numeric(intelligence))
data <- data %>% mutate(intelligence = ifelse(intelligence>50,"clever","dumb"))
score_mid=max(data$score)/2
score_mid
temp<-data%>%filter(`dog breed`=="Staffordshire Bull Terrier")
emp
temp
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
head(Boston)
#1a
sum(Boston$crim)/length(Boston)
install.packages("caret")
library(ISLR)
head(Auto)
library(ISLR)
head(Auto)
library(ISLR)
head(Auto)
dim(Auto)
n=dim(Boston)[1]
n
#1b
set.seed(12)
B= 1000
n=dim(Boston)[1]
boostrap_median = rep(0,B)
for(i in 1:B){
index = sample(1:n,n,replace=TRUE)
bootsample = Boston[index,]
fit = lm(crim~.,data=bootsample)
}
fit
summary(fit)
mean(Boston$crim)
#1a
sum(Boston$crim)/length(Boston)
library(MASS)
head(Boston)
#1a
mean(Boston$crim)
#1b
set.seed(12)
B= 1000
n=dim(Boston)[1]
boostrap_median = rep(0,B)
for(i in 1:B){
index = sample(1:n,n,replace=TRUE)
bootsample = Boston[index,]
fit = lm(crim~.,data=bootsample)
boostrap_median[i] = summary(fit)$coef[1,1]
}
for(i in 1:B){
index = sample(1:n,n,replace=TRUE)
bootsample = Boston[index,]
fit = lm(crim~.,data=bootsample)
boostrap_median[i] = summary(fit)$coef[1,1]
}
sqrt(sum((boostrap_median-mean(boostrap_median))^2)/(B-1))
sum(Boston$crim)/dim(Boston)[1]
#1d
glm.fit=glm(Y~nox+age,data=Boston,family='binomial')
head(Boston)
library(MASS)
head(Boston)
#1a
median=mean(Boston$crim)
median
#1b
set.seed(12)
B= 1000
n=dim(Boston)[1]
boostrap_median = rep(0,B)
for(i in 1:B){
index = sample(1:n,n,replace=TRUE)
bootsample = Boston[index,]
fit = lm(crim~.,data=bootsample)
boostrap_median[i] = summary(fit)$coef[1,1]
}
for(i in 1:B){
index = sample(1:n,n,replace=TRUE)
bootsample = Boston[index,]
fit = lm(crim~.,data=bootsample)
boostrap_median[i] = summary(fit)$coef[1,1]
}
sqrt(sum((boostrap_median-mean(boostrap_median))^2)/(B-1))
#1c
Y=rep(0,dim(Boston)[1])
Y[Boston$crim>median]=1
Boston$Y=Y
#1d
glm.fit=glm(Y~nox+age,data=Boston,family='binomial')
#3
head(College)
#3
head(College)
smp_size= floor(0.75*nrow(College))
smp_size
set.seed(12)
train_ind=sample(seq_len(nrow(Smarket)),size = smp_size)
train = College[train_ind,]
test=College[-train_ind,]
head(train)
inTrain <- createDataPartition(College$Apps, p = 0.75, list = FALSE)
library(caret)
inTrain <- createDataPartition(College$Apps, p = 0.75, list = FALSE)
training <- College[inTrain,]
testing <- College[-inTrain,]
training
lm.fit = lm(App~.,subset = train)
lm.fit = lm(App~.,data = train)
lm.fit = lm(Apps~.,data = train)
dim(Auto)
dim(College)
#train_partition <- createDataPartition(College$Apps, p = 0.75, list = FALSE)
#train <- College[train_partition,]
#test <- College[-train_partition,]
train =sample(dim(College),dim(College)*0.75)
#train_partition <- createDataPartition(College$Apps, p = 0.75, list = FALSE)
#train <- College[train_partition,]
#test <- College[-train_partition,]
train =sample(dim(College)[1],dim(College)[1]*0.75)
train
lm.fit = lm(Apps~.,data = College,subset=train)
mean((College$Apps - predict(lm.fit,College))[-train]^2)
mean((Apps - predict(lm.fit,College))[-train]^2)
attach(College)
mean((Apps - predict(lm.fit,College))[-train]^2)
lm = lm(Apps~.,data=train)
#3
head(College)
set.seed(12)
train_partition <- createDataPartition(College$Apps, p = 0.75, list = FALSE)
train <- College[train_partition,]
test <- College[-train_partition,]
lm = lm(Apps~.,data=train)
predicted<-predict(lm,testing)
predicted
train
lm
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
crash <- readr::read_cs/v('crash2016.csv')
crash
crash <- readr::read_cs/v('crash2016.csv')
setwd("~/Documents/ds202_project")
crash <- readr::read_csv('crash2016.csv')
crash <- readr::read_csv('crash2016.csv')
crash
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
#crash
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_histogram()
#crash
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_histogram(stat = "count")
#crash
unique(crash$PRIM_CONTRIBUTORY_CAUSE)
temp<-crash%>%summarise(count=count(PRIM_CONTRIBUTORY_CAUSE))
temp<-crash%>%summarize(count=count(PRIM_CONTRIBUTORY_CAUSE))
temp<-crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%summarise(count=n())
temp
temp %>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count))+geom_bar()
temp %>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE)+geom_bar()
temp %>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_bar()
temp %>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_bar()
temp %>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_bar(stat="identity")
temp %>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count))+geom_bar(stat="identity")
temp %>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count))+geom_bar(stat="identity")+coord_flip()
temp %>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count))+geom_bar(stat="identity")+coord_flip()+theme(axis.text.y = element_text(size = 6))+xlab("primary cause")+ylab("number of accident")+ggtitle("primary cause of accident in 2016")
crash%>%filter(PRIM_CONTRIBUTORY_CAUSE!="UNABLE TO DETERMINE")
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_histogram(stat = "count")+coord_flip()+theme(axis.text.y = element_text(size = 6))+xlab("primary cause")+ylab("number of accident")+ggtitle("primary cause of accident in 2016")
crash<-crash%>%filter(PRIM_CONTRIBUTORY_CAUSE!="UNABLE TO DETERMINE")
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_histogram(stat = "count")+coord_flip()+theme(axis.text.y = element_text(size = 6))+xlab("primary cause")+ylab("number of accident")+ggtitle("primary cause of accident in 2016")
crash<-crash%>%filter(PRIM_CONTRIBUTORY_CAUSE!="UNABLE TO DETERMINE"&&SEC_CONTRIBUTORY_CAUSE!="UNABLE TO DETERMINE")
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_histogram(stat = "count")+coord_flip()+theme(axis.text.y = element_text(size = 6))+xlab("primary cause")+ylab("number of accident")+ggtitle("primary cause of accident in 2016")
crash%>%ggplot(aes(x=SEC_CONTRIBUTORY_CAUSE))+geom_histogram(stat = "count")+coord_flip()+theme(axis.text.y = element_text(size = 6))+xlab("secondary cause")+ylab("number of accident")+ggtitle("secondary cause of accident in 2016")
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%summarise(count=INJURIES_TOTAL)
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=INJURIES_TOTAL))+geom_bar()
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=INJURIES_TOTAL))+geom_bar(stat="identity")
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=INJURIES_TOTAL))+geom_bar(stat="identity")+coord_flip()
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=INJURIES_TOTAL))+geom_bar(stat="identity")+coord_flip()+theme(axis.text.y = element_text(size = 6))+xlab("secondary cause")+ylab("number of accident")+ggtitle("secondary cause of accident in 2016")
uniqu(crash$LIGHTING_CONDITION)
unique(crash$LIGHTING_CONDITION)
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%summarise(count=n())%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count))+geom_bar(stat = "identity")
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%summarise(count=n())%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count))+geom_bar(stat = "identity")+coord_flip()
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%summarise(count=n())%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count))+geom_bar(stat = "identity")+coord_flip()+theme(axis.text.y = element_text(size = 6))+xlab("primary cause")+ylab("Total Injuries")+ggtitle("Total Injuries in each primary cause 2016")
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%summarise(count=n())%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count))+geom_bar()+coord_flip()+theme(axis.text.y = element_text(size = 6))
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%summarise(count=n())%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_bar()+coord_flip()+theme(axis.text.y = element_text(size = 6))
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_bar()+coord_flip()+theme(axis.text.y = element_text(size = 6))
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,fill=LIGHTING_CONDITION))+geom_bar(position="fill")+coord_flip()+theme(axis.text.y = element_text(size = 6))
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,fill=LIGHTING_CONDITION,y=count(LIGHTING_CONDITION)))+geom_bar(position="fill")+coord_flip()+theme(axis.text.y = element_text(size = 6))
crash%>%group_by(PRIM_CONTRIBUTORY_CAUSE)%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,y=count(PRIM_CONTRIBUTORY_CAUSE)))+geom_bar()+coord_flip()+theme(axis.text.y = element_text(size = 6))
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE))+geom_bar(stat = "count")+coord_flip()+theme(axis.text.y = element_text(size = 6))
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,fill=LIGHTING_CONDITION))+geom_bar(stat = "count",position = "fill")+coord_flip()+theme(axis.text.y = element_text(size = 6))
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,fill=LIGHTING_CONDITION))+geom_bar(stat = "count",position = "fill")+coord_flip()+theme(axis.text.y = element_text(size = 6))+theme(legend.position = "top")
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,fill=LIGHTING_CONDITION))+geom_bar(stat = "count",position = "fill")+coord_flip()+theme(axis.text.y = element_text(size = 6))+theme(legend.position = "top",legend.title = element_text(size = 10))
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,fill=LIGHTING_CONDITION))+geom_bar(stat = "count",position = "fill")+coord_flip()+theme(axis.text.y = element_text(size = 6))+theme(legend.position = "top",legend.title = element_text(size = 5))
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,fill=LIGHTING_CONDITION))+geom_bar(stat = "count",position = "fill")+coord_flip()+theme(axis.text.y = element_text(size = 6))+theme(legend.position = "top",legend.text = element_text(size = 6))
crash%>%ggplot(aes(x=PRIM_CONTRIBUTORY_CAUSE,fill=LIGHTING_CONDITION))+geom_bar(stat = "count",position = "fill")+coord_flip()+theme(axis.text.y = element_text(size = 6))+theme(legend.position = "top",legend.text = element_text(size = 6),legend.title = element_text(size = 6))
crash%>%ggplot()%>%geom_mosaic(x=product(LIGHTING_CONDITION),fill=PRIM_CONTRIBUTORY_CAUSE)
library(ggmosaic)
crash%>%ggplot()%>%geom_mosaic(x=product(LIGHTING_CONDITION),fill=PRIM_CONTRIBUTORY_CAUSE)
crash%>%ggplot()%>%geom_mosaic(aes(x=product(LIGHTING_CONDITION),fill=PRIM_CONTRIBUTORY_CAUSE))
crash%>%ggplot()+geom_mosaic(aes(x=product(LIGHTING_CONDITION),fill=PRIM_CONTRIBUTORY_CAUSE))
